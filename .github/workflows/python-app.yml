name: AWS ECR push & deploy EKS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: youtubescraper
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update kube config
        run: aws eks update-kubeconfig --name CC-cluster --region us-east-1

      - name: Deploy to EKS
        run: |

          # GitHub Actions 변수 값을 환경 변수로 선언
          ECR_IMAGE="${{ steps.login-ecr.outputs.registry }}/youtubescraper:${{ github.run_number }}"

          # sed 명령어 실행: deployment 파일의 이미지 태그를 동적으로 업데이트
          sed -i "s|615299753054.dkr.ecr.us-east-1.amazonaws.com/youtubescraper:.*|$ECR_IMAGE|" youtubescraper-deployment.yaml

          # Kubernetes 배포 적용
          kubectl apply -f youtubescraper-deployment.yaml
          kubectl rollout status deployment/youtubescraper
